$OpenBSD: patch-include_vulkan_vulkan_hpp,v 1.1 2020/07/07 08:08:06 thfr Exp $

Index: include/vulkan/vulkan.hpp
--- include/vulkan/vulkan.hpp.orig
+++ include/vulkan/vulkan.hpp
@@ -66,7 +66,7 @@
 #endif
 
 #if VULKAN_HPP_ENABLE_DYNAMIC_LOADER_TOOL == 1
-#  if defined(__linux__) || defined(__APPLE__)
+#  if defined(__unix__) || defined(__APPLE__)
 #   include <dlfcn.h>
 #  endif
 #endif
@@ -83744,7 +83744,7 @@ namespace VULKAN_HPP_NAMESPACE
     {
       if ( !vulkanLibraryName.empty() )
       {
-#  if defined( __linux__ ) || defined( __APPLE__ )
+#  if defined( __unix__ ) || defined( __APPLE__ )
         m_library = dlopen( vulkanLibraryName.c_str(), RTLD_NOW | RTLD_LOCAL );
 #  elif defined( _WIN32 )
         m_library = detail::LoadLibraryA( vulkanLibraryName.c_str() );
@@ -83754,7 +83754,7 @@ namespace VULKAN_HPP_NAMESPACE
       }
       else
       {
-#  if defined( __linux__ )
+#  if defined( __unix__ )
         m_library = dlopen( "libvulkan.so", RTLD_NOW | RTLD_LOCAL );
         if ( m_library == nullptr )
         {
@@ -83801,7 +83801,7 @@ namespace VULKAN_HPP_NAMESPACE
     {
       if ( m_library )
       {
-#  if defined( __linux__ ) || defined( __APPLE__ )
+#  if defined( __unix__ ) || defined( __APPLE__ )
         dlclose( m_library );
 #  elif defined( _WIN32 )
         detail::FreeLibrary( m_library );
@@ -83814,7 +83814,7 @@ namespace VULKAN_HPP_NAMESPACE
     template <typename T>
     T getProcAddress( const char* function ) const VULKAN_HPP_NOEXCEPT
     {
-#  if defined( __linux__ ) || defined( __APPLE__ )
+#  if defined( __unix__ ) || defined( __APPLE__ )
       return (T)dlsym( m_library, function );
 #  elif defined( _WIN32 )
       return (T)detail::GetProcAddress( m_library, function );
@@ -83827,7 +83827,7 @@ namespace VULKAN_HPP_NAMESPACE
 
   private:
     bool m_success;
-#  if defined( __linux__ ) || defined( __APPLE__ ) || defined( _WIN32 )
+#  if defined( __unix__ ) || defined( __APPLE__ ) || defined( _WIN32 )
     void * m_library;
 #  else
 #    error unsupported platform
