$OpenBSD: patch-src_core_c,v 1.8 2020/07/03 02:28:35 jeremy Exp $

Reinit sndio if there is a audio(4) error.  Without this, aqualung is
unusable after an audio(4) error until it is closed and reopened.

Create .config directory before .config/aqualung if it does not exist.

Index: src/core.c
--- src/core.c.orig
+++ src/core.c
@@ -20,6 +20,7 @@
 
 #include <config.h>
 
+#include <libgen.h>
 #include <stddef.h>
 #include <stdio.h>
 #include <stdlib.h>
@@ -119,6 +120,10 @@ GSList * saved_pconns_L = NULL;
 GSList * saved_pconns_R = NULL;
 #endif /* HAVE_JACK */
 
+#ifdef HAVE_SNDIO
+int sndio_reinit(thread_info_t * info, int verbose);
+#endif /* HAVE_SNDIO */
+
 const size_t sample_size = sizeof(float);
 
 gint playlist_state, browser_state;
@@ -802,8 +807,15 @@ sndio_thread(void * arg) {
 
 		/* write data to audio device */
 		bytes_written = sio_write(sndio_hdl, sndio_short_buf, 2*n_avail * sizeof(short));
-		if (bytes_written != 2*n_avail * sizeof(short))
+		if (bytes_written != 2*n_avail * sizeof(short)) {
 			fprintf(stderr, "sndio_thread: Error writing to audio device\n");
+			if (sndio_reinit(info, 1) == 0) {
+				fprintf(stderr, "sndio_thread: audio device reinit successful\n");
+				sio_close(sndio_hdl);
+				sndio_hdl = info->sndio_hdl;
+				goto sndio_wake;
+			}
+		}
 	}
  sndio_finish:
 	return 0;
@@ -1235,7 +1247,7 @@ jack_info_shutdown(jack_status_t code, const char * re
  * -N : unable to start with given params
  */
 int
-sndio_init(thread_info_t * info, int verbose, gboolean realtime, int priority) {
+sndio_reinit(thread_info_t * info, int verbose) {
 
 	struct sio_hdl * sndio_hdl;
 	struct sio_par sndio_par;
@@ -1300,6 +1312,15 @@ sndio_init(thread_info_t * info, int verbose, gboolean
 	}
 
 	info->sndio_hdl = sndio_hdl;
+	return 0;
+}
+
+int
+sndio_init(thread_info_t * info, int verbose, gboolean realtime, int priority) {
+	int ret;
+	if ((ret = sndio_reinit(info, verbose)) != 0) {
+		return ret;
+	}
 	AQUALUNG_THREAD_CREATE(info->sndio_thread_id, NULL, sndio_thread, info)
 	set_thread_priority(info->sndio_thread_id, "sndio output", realtime, priority);
 
@@ -1887,6 +1908,8 @@ load_default_cl(int * argc, char *** argv) {
         if (chdir(options.confdir) != 0) {
                 if (errno == ENOENT) {
                         fprintf(stderr, "Creating directory %s\n", options.confdir);
+			/* Try creating .config before .config/aqualung */
+			mkdir(dirname(options.confdir), S_IRUSR | S_IWUSR | S_IXUSR);
                         if (mkdir(options.confdir, S_IRUSR | S_IWUSR | S_IXUSR) < 0) {
 				perror("cannot create config directory: mkdir");
 				exit(1);
