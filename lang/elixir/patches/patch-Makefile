$OpenBSD: Makefile $

Change Erlang version with the one set in the environment.

--- Makefile.orig	Fri May 28 15:34:14 2021
+++ Makefile	Sat Jun 12 14:17:04 2021
@@ -5,9 +5,9 @@
 CANONICAL := 1.12/
 CANONICAL ?= master/
 ELIXIRC := bin/elixirc --ignore-module-conflict $(ELIXIRC_OPTS)
-ERLC := erlc -I lib/elixir/include
-ERL_MAKE := if [ -n "$(ERLC_OPTS)" ]; then ERL_COMPILER_OPTIONS=$(ERLC_OPTS) erl -make; else erl -make; fi
-ERL := erl -I lib/elixir/include -noshell -pa lib/elixir/ebin
+ERLC := erlc${MODERL_VERSION} -I lib/elixir/include
+ERL_MAKE := if [ -n "$(ERLC_OPTS)" ]; then ERL_COMPILER_OPTIONS=$(ERLC_OPTS) erl${MODERL_VERSION} -make; else erl${MODERL_VERSION} -make; fi
+ERL := erl${MODERL_VERSION} -I lib/elixir/include -noshell -pa lib/elixir/ebin
 GENERATE_APP := $(CURDIR)/lib/elixir/generate_app.escript
 VERSION := $(strip $(shell cat VERSION))
 Q := @
@@ -28,7 +28,7 @@
 #==> Functions
 
 define CHECK_ERLANG_RELEASE
-	erl -noshell -eval '{V,_} = string:to_integer(erlang:system_info(otp_release)), io:fwrite("~s", [is_integer(V) and (V >= 22)])' -s erlang halt | grep -q '^true'; \
+	erl${MODERL_VERSION} -noshell -eval '{V,_} = string:to_integer(erlang:system_info(otp_release)), io:fwrite("~s", [is_integer(V) and (V >= 22)])' -s erlang halt | grep -q '^true'; \
 		if [ $$? != 0 ]; then \
 		  echo "At least Erlang/OTP 22.0 is required to build Elixir"; \
 		  exit 1; \
@@ -79,7 +79,7 @@
 	$(Q) cd lib/elixir && mkdir -p ebin && $(ERL_MAKE)
 
 $(PARSER): lib/elixir/src/elixir_parser.yrl
-	$(Q) erlc -o $@ +'{verbose,true}' +'{report,true}' $<
+	$(Q) erlc${MODERL_VERSION} -o $@ +'{verbose,true}' +'{report,true}' $<
 
 # Since Mix depends on EEx and EEx depends on Mix,
 # we first compile EEx without the .app file,
