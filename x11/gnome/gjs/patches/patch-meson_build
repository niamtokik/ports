$OpenBSD: patch-meson_build,v 1.4 2021/01/10 14:14:53 jasper Exp $

In file included from /usr/include/readline/readline.h:38:
In file included from /usr/include/readline/keymaps.h:36:
In file included from /usr/include/readline/chardefs.h:39:
/usr/include/c++/v1/string.h:104:13: error: functions that differ only in their return type cannot be overloaded
const char* strstr(const char* __s1, const char* __s2) {return __libcpp_strstr(__s1, __s2);}
      ~~~~~ ^
      /usr/include/string.h:89:7: note: previous declaration is here
      char    *strstr(const char *, const char *);
      ~~~~~~~~~^
      5 errors generated.

XXX last chunk: should default to the value of b_lundef.

Index: meson.build
--- meson.build.orig
+++ meson.build
@@ -155,6 +155,7 @@ readline = cxx.find_library('readline', required: get_
 # On some systems we need to link readline to a termcap compatible library
 readline_code = '''
 #include <cstdio>
+#include <string>
 #include <readline/readline.h>
 int main(void) {
     readline("foo");
@@ -298,9 +299,13 @@ header_conf.set('HAVE_DTRACE', get_option('dtrace'),
     description: 'Using dtrace probes')
 header_conf.set('HAVE_PRINTF_ALTERNATIVE_INT', have_printf_alternative_int,
     description: 'printf() accepts "%Id" for alternative integer output')
+readline_prefix = '''
+#include <cstdio>
+#include <string>
+'''
 if build_readline
     header_conf.set('HAVE_READLINE_READLINE_H',
-        cxx.check_header('readline/readline.h', prefix: '#include <cstdio>',
+        cxx.check_header('readline/readline.h', prefix: readline_prefix,
             required: readline.found()))
 endif
 header_conf.set('HAVE_SYS_SYSCALL_H', cxx.check_header('sys/syscall.h'))
@@ -483,13 +488,6 @@ if build_profiler
 endif
 
 link_args = []
-if cxx.has_link_argument('-Wl,-no-undefined')
-    link_args += '-Wl,-no-undefined'
-else
-    # -undefined error is the equivalent of -no-undefined for the macOS linker,
-    # but -undefined would also be understood as a valid argument for GNU ld!
-    link_args += cxx.get_supported_link_arguments('-Wl,-undefined,error')
-endif
 
 libgjs_cpp_args = ['-DGJS_COMPILATION'] + directory_defines
 
