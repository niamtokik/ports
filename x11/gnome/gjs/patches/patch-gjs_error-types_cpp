$OpenBSD: patch-gjs_error-types_cpp,v 1.1 2021/05/09 08:55:41 ajacoutot Exp $

From f02eaf3a9d3465915eb849428c2d9615e2184a4c Mon Sep 17 00:00:00 2001
From: Philip Chimento <philip.chimento@gmail.com>
Date: Sun, 14 Feb 2021 12:20:09 -0800
Subject: [PATCH] maint: Avoid g_once_init_enter error in GCC 11

Index: gjs/error-types.cpp
--- gjs/error-types.cpp.orig
+++ gjs/error-types.cpp
@@ -31,24 +31,18 @@ G_DEFINE_QUARK(gjs-js-error-quark, gjs_js_error)
 // clang-format on
 
 GType gjs_js_error_get_type(void) {
-    static volatile GType g_type_id;
-
-    if (g_once_init_enter(&g_type_id)) {
-        static GEnumValue errors[] = {
-            { GJS_JS_ERROR_ERROR, "Error", "error" },
-            { GJS_JS_ERROR_EVAL_ERROR, "EvalError", "eval-error" },
-            { GJS_JS_ERROR_INTERNAL_ERROR, "InternalError", "internal-error" },
-            { GJS_JS_ERROR_RANGE_ERROR, "RangeError", "range-error" },
-            { GJS_JS_ERROR_REFERENCE_ERROR, "ReferenceError", "reference-error" },
-            { GJS_JS_ERROR_STOP_ITERATION, "StopIteration", "stop-iteration" },
-            { GJS_JS_ERROR_SYNTAX_ERROR, "SyntaxError", "syntax-error" },
-            { GJS_JS_ERROR_TYPE_ERROR, "TypeError", "type-error" },
-            { GJS_JS_ERROR_URI_ERROR, "URIError", "uri-error" },
-            { 0, nullptr, nullptr }
-        };
-
-        g_type_id = g_enum_register_static("GjsJSError", errors);
-    }
-
+    static const GEnumValue errors[] = {
+        {GJS_JS_ERROR_ERROR, "Error", "error"},
+        {GJS_JS_ERROR_EVAL_ERROR, "EvalError", "eval-error"},
+        {GJS_JS_ERROR_INTERNAL_ERROR, "InternalError", "internal-error"},
+        {GJS_JS_ERROR_RANGE_ERROR, "RangeError", "range-error"},
+        {GJS_JS_ERROR_REFERENCE_ERROR, "ReferenceError", "reference-error"},
+        {GJS_JS_ERROR_STOP_ITERATION, "StopIteration", "stop-iteration"},
+        {GJS_JS_ERROR_SYNTAX_ERROR, "SyntaxError", "syntax-error"},
+        {GJS_JS_ERROR_TYPE_ERROR, "TypeError", "type-error"},
+        {GJS_JS_ERROR_URI_ERROR, "URIError", "uri-error"},
+        {0, nullptr, nullptr}};
+    // Initialization of static local variable guaranteed only once in C++11
+    static GType g_type_id = g_enum_register_static("GjsJSError", errors);
     return g_type_id;
 }
