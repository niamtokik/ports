$OpenBSD: patch-daemon_gdm-local-display-factory_c,v 1.18 2021/05/30 09:04:23 ajacoutot Exp $

Index: daemon/gdm-local-display-factory.c
--- daemon/gdm-local-display-factory.c.orig
+++ daemon/gdm-local-display-factory.c
@@ -28,7 +28,9 @@
 #include <glib-object.h>
 #include <gio/gio.h>
 
+#if 0
 #include <systemd/sd-login.h>
+#endif
 
 #include "gdm-common.h"
 #include "gdm-manager.h"
@@ -376,7 +378,10 @@ on_display_status_changed (GdmDisplay             *dis
                         /* reset num failures */
                         factory->num_failures = 0;
 
+#if 0
                         gdm_local_display_factory_sync_seats (factory);
+#endif
+                        ensure_display_for_seat (factory, seat_id);
                 }
                 break;
         case GDM_DISPLAY_FAILED:
@@ -482,6 +487,7 @@ ensure_display_for_seat (GdmLocalDisplayFactory *facto
         GdmDisplay      *display = NULL;
         g_autofree char *login_session_id = NULL;
 
+#if 0
         ret = sd_seat_can_graphical (seat_id);
 
         if (ret < 0) {
@@ -561,13 +567,16 @@ ensure_display_for_seat (GdmLocalDisplayFactory *facto
         if (!seat_supports_graphics)
                 return;
 
+#endif
         g_debug ("GdmLocalDisplayFactory: %s login display for seat %s requested",
                  session_type? : "X11", seat_id);
         store = gdm_display_factory_get_display_store (GDM_DISPLAY_FACTORY (factory));
 
+#if 0
         if (is_seat0)
                 display = gdm_display_store_find (store, lookup_prepared_display_by_seat_id, (gpointer) seat_id);
         else
+#endif
                 display = gdm_display_store_find (store, lookup_by_seat_id, (gpointer) seat_id);
 
         /* Ensure we don't create the same display more than once */
@@ -576,6 +585,7 @@ ensure_display_for_seat (GdmLocalDisplayFactory *facto
                 return;
         }
 
+#if 0
         /* If we already have a login window, switch to it */
         if (gdm_get_login_window_session_id (seat_id, &login_session_id)) {
                 GdmDisplay *display;
@@ -593,6 +603,7 @@ ensure_display_for_seat (GdmLocalDisplayFactory *facto
                         return;
                 }
         }
+#endif
 
         g_debug ("GdmLocalDisplayFactory: Adding display on seat %s", seat_id);
 
@@ -628,6 +639,7 @@ ensure_display_for_seat (GdmLocalDisplayFactory *facto
         return;
 }
 
+#if 0
 static void
 delete_display (GdmLocalDisplayFactory *factory,
                 const char             *seat_id) {
@@ -790,6 +802,7 @@ lookup_by_tty (const char *id,
 
         return g_strcmp0 (tty_to_check, tty_to_find) == 0;
 }
+#endif
 
 #if defined(ENABLE_USER_DISPLAY_SERVER)
 static void
@@ -967,6 +980,7 @@ on_vt_changed (GIOChannel    *source,
 }
 #endif
 
+#if 0
 static void
 gdm_local_display_factory_start_monitor (GdmLocalDisplayFactory *factory)
 {
@@ -1046,6 +1060,7 @@ gdm_local_display_factory_stop_monitor (GdmLocalDispla
         }
 #endif
 }
+#endif
 
 static void
 on_display_added (GdmDisplayStore        *display_store,
@@ -1097,8 +1112,12 @@ gdm_local_display_factory_start (GdmDisplayFactory *ba
                                  factory,
                                  0);
 
+#if 0
         gdm_local_display_factory_start_monitor (factory);
         return gdm_local_display_factory_sync_seats (factory);
+#endif
+        ensure_display_for_seat (factory, "/org/freedesktop/ConsoleKit/Seat1");
+        return TRUE;
 }
 
 static gboolean
@@ -1109,7 +1128,9 @@ gdm_local_display_factory_stop (GdmDisplayFactory *bas
 
         g_return_val_if_fail (GDM_IS_LOCAL_DISPLAY_FACTORY (factory), FALSE);
 
+#if 0
         gdm_local_display_factory_stop_monitor (factory);
+#endif
 
         store = gdm_display_factory_get_display_store (GDM_DISPLAY_FACTORY (factory));
 
@@ -1263,7 +1284,9 @@ gdm_local_display_factory_finalize (GObject *object)
 
         g_hash_table_destroy (factory->used_display_numbers);
 
+#if 0
         gdm_local_display_factory_stop_monitor (factory);
+#endif
 
         G_OBJECT_CLASS (gdm_local_display_factory_parent_class)->finalize (object);
 }
