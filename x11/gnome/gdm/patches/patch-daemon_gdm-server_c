$OpenBSD: patch-daemon_gdm-server_c,v 1.13 2021/05/29 14:02:24 ajacoutot Exp $

Some chunks are part of:
REVERT - OpenBSD lacks sigwaitinfo(2)
From 956d7d1c7a0cfbf2beacdb9e88e645e15ad32047 Mon Sep 17 00:00:00 2001
From: Jasper St. Pierre <jstpierre@mecheye.net>
Date: Fri, 14 Feb 2014 19:32:50 +0000
Subject: server: Process SIGUSR1 more carefully

Index: daemon/gdm-server.c
--- daemon/gdm-server.c.orig
+++ daemon/gdm-server.c
@@ -43,7 +43,9 @@
 #include <linux/vt.h>
 #endif
 
+#if 0
 #include <systemd/sd-daemon.h>
+#endif
 
 #ifdef ENABLE_SYSTEMD_JOURNAL
 #include <systemd/sd-journal.h>
@@ -84,6 +86,7 @@ struct _GdmServer
         char    *auth_file;
 
         guint    child_watch_id;
+        guint    sigusr1_id;
 
         gboolean is_initial;
 };
@@ -117,8 +120,36 @@ G_DEFINE_TYPE (GdmServer, gdm_server, G_TYPE_OBJECT)
 char *
 gdm_server_get_display_device (GdmServer *server)
 {
-        /* systemd finds the display device out on its own based on the display */
-        return NULL;
+        char    *out;
+        char    *command;
+        int      status;
+        gboolean res;
+        GError  *error;
+
+        g_return_val_if_fail (GDM_IS_SERVER (server), NULL);
+
+        error = NULL;
+        command = g_strdup_printf (CONSOLEKIT_DIR "/ck-get-x11-display-device --display %s",
+                                   server->display_name);
+
+        g_debug ("GdmServer: Running helper %s", command);
+        out = NULL;
+        res = g_spawn_command_line_sync (command,
+                                         &out,
+                                         NULL,
+                                         &status,
+                                         &error);
+        if (! res) {
+                g_warning ("Could not run helper: %s", error->message);
+                g_error_free (error);
+        } else {
+                out = g_strstrip (out);
+                g_debug ("GdmServer: Got tty: '%s'", out);
+        }
+
+        g_free (command);
+
+        return out;
 }
 
 static void
@@ -141,22 +172,21 @@ static GMutex sigusr1_thread_mutex;
 
 static gboolean
 got_sigusr1 (gpointer user_data)
-{
-        GPid pid = GPOINTER_TO_UINT (user_data);
-        GSList *l;
+ {
+        GdmServer *server = user_data;
 
-        g_debug ("GdmServer: got SIGUSR1 from PID %d", pid);
+        g_debug ("GdmServer: Got USR1 from X server - emitting READY");
+ 
+        gdm_run_script (GDMCONFDIR "/Init", GDM_USERNAME,
+                        server->display_name,
+                        NULL, /* hostname */
+                        server->auth_file);
 
-        for (l = active_servers; l; l = l->next) {
-                GdmServer *server = l->data;
-
-                if (server->pid == pid)
-                        gdm_server_ready (server);
-        }
-
-        return G_SOURCE_REMOVE;
+        g_signal_emit (server, signals[READY], 0);
+        return FALSE;
 }
 
+#if 0
 static gpointer
 sigusr1_thread_main (gpointer user_data)
 {
@@ -199,6 +229,7 @@ gdm_server_launch_sigusr1_thread_if_needed (void)
                 g_mutex_unlock (&sigusr1_thread_mutex);
         }
 }
+#endif
 
 static void
 gdm_server_init_command (GdmServer *server)
@@ -220,6 +251,7 @@ gdm_server_init_command (GdmServer *server)
 
 #define X_SERVER_ARG_FORMAT " -background none -noreset -verbose %s%s"
 
+#if 0
         /* This is a temporary hack to work around the fact that XOrg
          * currently lacks support for multi-seat hotplugging for
          * display devices. This bit should be removed as soon as XOrg
@@ -256,6 +288,7 @@ gdm_server_init_command (GdmServer *server)
         return;
 
 fallback:
+#endif
         server->command = g_strdup_printf (X_SERVER X_SERVER_ARG_FORMAT, verbosity, debug_options);
 
 }
@@ -705,7 +738,9 @@ gdm_server_spawn (GdmServer    *server,
                            prune_active_servers_list,
                            server);
 
+#if 0
         gdm_server_launch_sigusr1_thread_if_needed ();
+#endif
 
         if (!g_spawn_async_with_pipes (NULL,
                                        argv,
@@ -1043,6 +1078,10 @@ gdm_server_init (GdmServer *server)
         server->pid = -1;
 
         server->log_dir = g_strdup (LOGDIR);
+
+        server->sigusr1_id = g_unix_signal_add (SIGUSR1,
+                                                got_sigusr1,
+                                                server);
 }
 
 static void
@@ -1056,6 +1095,9 @@ gdm_server_finalize (GObject *object)
         server = GDM_SERVER (object);
 
         gdm_server_stop (server);
+
+        if (server->sigusr1_id > 0)
+                g_source_remove (server->sigusr1_id);
 
         g_free (server->command);
         g_free (server->user_name);
