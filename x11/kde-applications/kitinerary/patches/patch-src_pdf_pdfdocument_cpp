$OpenBSD: patch-src_pdf_pdfdocument_cpp,v 1.2 2020/09/12 12:40:10 rsadowski Exp $

Starting with poppler-20, POPPLER_VERSION no longer is numeric -- it's
what POPPLER_VERSION_STRING was in earlier releases.

Index: src/pdf/pdfdocument.cpp
--- src/pdf/pdfdocument.cpp.orig
+++ src/pdf/pdfdocument.cpp
@@ -41,11 +41,7 @@ void PdfPagePrivate::load()
     const auto pageRect = m_doc->m_popplerDoc->getPage(m_pageNum + 1)->getCropBox();
     std::unique_ptr<GooString> s(device.getText(pageRect->x1, pageRect->y1, pageRect->x2, pageRect->y2));
 
-#if KPOPPLER_VERSION >= QT_VERSION_CHECK(0, 72, 0)
     m_text = QString::fromUtf8(s->c_str());
-#else
-    m_text = QString::fromUtf8(s->getCString());
-#endif
     m_images = std::move(device.m_images);
     for (auto it = m_images.begin(); it != m_images.end(); ++it) {
         (*it).d->m_page = this;
@@ -106,12 +102,8 @@ QString PdfPage::textInRect(double left, double top, d
     TextOutputDev device(nullptr, false, 0, false, false);
     d->m_doc->m_popplerDoc->displayPageSlice(&device, d->m_pageNum + 1, 72, 72, 0, false, true, false, -1, -1, -1, -1);
     std::unique_ptr<GooString> s(device.getText(l, t, r, b));
-#if KPOPPLER_VERSION >= QT_VERSION_CHECK(0, 72, 0)
     return QString::fromUtf8(s->c_str());
 #else
-    return QString::fromUtf8(s->getCString());
-#endif
-#else
     Q_UNUSED(left);
     Q_UNUSED(top);
     Q_UNUSED(right);
@@ -233,12 +225,8 @@ QDateTime PdfDocument::creationTime() const
     if (!dt) {
         return {};
     }
-#if KPOPPLER_VERSION >= QT_VERSION_CHECK(0, 72, 0)
     return parsePdfDateTime(dt->c_str());
 #else
-    return parsePdfDateTime(dt->getCString());
-#endif
-#else
     return {};
 #endif
 }
@@ -250,12 +238,8 @@ QDateTime PdfDocument::modificationTime() const
     if (!dt) {
         return {};
     }
-#if KPOPPLER_VERSION >= QT_VERSION_CHECK(0, 72, 0)
     return parsePdfDateTime(dt->c_str());
 #else
-    return parsePdfDateTime(dt->getCString());
-#endif
-#else
     return {};
 #endif
 }
@@ -276,13 +260,7 @@ PdfDocument* PdfDocument::fromData(const QByteArray &d
     std::unique_ptr<PdfDocument> doc(new PdfDocument(parent));
     doc->d->m_pdfData = data;
     // PDFDoc takes ownership of stream
-#if KPOPPLER_VERSION >= QT_VERSION_CHECK(0, 58, 0)
     auto stream = new MemStream(const_cast<char*>(doc->d->m_pdfData.constData()), 0, doc->d->m_pdfData.size(), Object());
-#else
-    Object obj;
-    obj.initNull();
-    auto stream = new MemStream(const_cast<char*>(doc->d->m_pdfData.constData()), 0, doc->d->m_pdfData.size(), &obj);
-#endif
     std::unique_ptr<PDFDoc> popplerDoc(new PDFDoc(stream, nullptr, nullptr));
     if (!popplerDoc->isOk()) {
         qCWarning(Log) << "Got invalid PDF document!" << popplerDoc->getErrorCode();
