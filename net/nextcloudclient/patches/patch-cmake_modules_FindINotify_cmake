$OpenBSD: patch-cmake_modules_FindINotify_cmake,v 1.1 2021/04/24 04:53:27 rsadowski Exp $

Index: cmake/modules/FindINotify.cmake
--- cmake/modules/FindINotify.cmake.orig
+++ cmake/modules/FindINotify.cmake
@@ -1,30 +1,62 @@
-# (c) 2014 Copyright ownCloud GmbH
-# Redistribution and use is allowed according to the terms of the BSD license.
-# For details see the accompanying COPYING* file.
+#.rst:
+# FindInotify
+# --------------
+#
+# Try to find inotify on this system. This finds:
+#  - libinotify on Unix like systems, or
+#  - the kernel's inotify on Linux systems.
+#
+# This will define the following variables:
+#
+# ``Inotify_FOUND``
+#    True if inotify is available
+# ``Inotify_LIBRARIES``
+#    This has to be passed to target_link_libraries()
+# ``Inotify_INCLUDE_DIRS``
+#    This has to be passed to target_include_directories()
+#
+# On Linux, the libraries and include directories are empty,
+# even though ``Inotify_FOUND`` may be set to TRUE. This is because
+# no special includes or libraries are needed. On other systems
+# these may be needed to use inotify.
+#
+# Since 5.32.0.
 
-# This module defines
-#  INOTIFY_INCLUDE_DIR, where to find inotify.h, etc.
-#  INOTIFY_LIBRARY_DIR, the directory holding the inotify library.
-#  INOTIFY_FOUND, If false, do not try to use inotify.
-# also defined, but not for general use are
-#  INOTIFY_LIBRARY, where to find the inotify library.
+#=============================================================================
+# SPDX-FileCopyrightText: 2016 Tobias C. Berner <tcberner@FreeBSD.org>
+# SPDX-FileCopyrightText: 2017 Adriaan de Groot <groot@kde.org>
+#
+# SPDX-License-Identifier: BSD-2-Clause
+#=============================================================================
 
-find_path(INOTIFY_INCLUDE_DIR sys/inotify.h 
-          PATH_SUFFIXES inotify)
-mark_as_advanced(INOTIFY_INCLUDE_DIR)
+find_path(Inotify_INCLUDE_DIRS sys/inotify.h)
 
-find_library(INOTIFY_LIBRARY inotify PATH_SUFFIXES lib/inotify)
+if(Inotify_INCLUDE_DIRS)
+# On Linux there is no library to link against, on the BSDs there is.
+# On the BSD's, inotify is implemented through a library, libinotify.
+    if( CMAKE_SYSTEM_NAME MATCHES "Linux")
+        set(Inotify_FOUND TRUE)
+        set(Inotify_LIBRARIES "")
+        set(Inotify_INCLUDE_DIRS "")
+    else()
+        find_library(Inotify_LIBRARIES NAMES inotify)
+        include(FindPackageHandleStandardArgs)
+        find_package_handle_standard_args(Inotify
+            FOUND_VAR
+                Inotify_FOUND
+            REQUIRED_VARS
+                Inotify_LIBRARIES
+                Inotify_INCLUDE_DIRS
+        )
+        mark_as_advanced(Inotify_LIBRARIES Inotify_INCLUDE_DIRS)
+        include(FeatureSummary)
+        set_package_properties(Inotify PROPERTIES
+            URL "https://github.com/libinotify-kqueue/"
+            DESCRIPTION "inotify API on the *BSD family of operating systems."
+        )
+    endif()
+else()
+   set(Inotify_FOUND FALSE)
+endif()
 
-get_filename_component(INOTIFY_LIBRARY_DIR ${INOTIFY_LIBRARY} PATH)
-mark_as_advanced(INOTIFY_LIBRARY_DIR)
-
-# all listed variables are TRUE
-# handle the QUIETLY and REQUIRED arguments and set INOTIFY_FOUND to TRUE if
-include(FindPackageHandleStandardArgs)
-find_package_handle_standard_args(INOTIFY DEFAULT_MSG INOTIFY_INCLUDE_DIR INOTIFY_LIBRARY_DIR)
-
-IF(INOTIFY_FOUND)
-  SET(INotify_INCLUDE_DIRS ${INOTIFY_INCLUDE_DIR})
-  SET(INotify_LIBRARY_DIRS ${INOTIFY_LIBRARY_DIR})
-ENDIF(INOTIFY_FOUND)
-
+mark_as_advanced(Inotify_LIBRARIES Inotify_INCLUDE_DIRS)
