$OpenBSD: patch-src_mysql_plugin_c,v 1.1 2021/02/03 23:14:18 sthen Exp $

From abc6a2fd647aa97707acd7ae3e44785de3aea4d3 Mon Sep 17 00:00:00 2001
From: Paolo Lucente <pl+github@pmacct.net>
Date: Mon, 18 May 2020 11:56:46 +0000
Subject: [PATCH] * fix, renamed some variables and unified declaration of
 others in order to be more gcc10 friendly. Related to Issue #394

Index: src/mysql_plugin.c
--- src/mysql_plugin.c.orig
+++ src/mysql_plugin.c
@@ -170,7 +170,7 @@ void mysql_plugin(int pipe_fd, struct configuration *c
 
     /* lazy sql refresh handling */
     if (idata.now > refresh_deadline) {
-      if (qq_ptr) sql_cache_flush(sql_queries_queue, qq_ptr, &idata, FALSE);
+      if (sql_qq_ptr) sql_cache_flush(sql_queries_queue, sql_qq_ptr, &idata, FALSE);
       sql_cache_handle_flush_event(&idata, &refresh_deadline, &pt);
     }
     else {
@@ -272,7 +272,7 @@ void mysql_plugin(int pipe_fd, struct configuration *c
 	}
 
         prim_ptrs.data = data;
-	(*insert_func)(&prim_ptrs, &idata);
+	(*sql_insert_func)(&prim_ptrs, &idata);
 	
 	((struct ch_buf_hdr *)pipebuf)->num--;
         if (((struct ch_buf_hdr *)pipebuf)->num) {
@@ -469,7 +469,7 @@ void MY_cache_purge(struct db_cache *queue[], int inde
 
   /* re-using pending queries queue stuff from parent and saving clauses */
   memcpy(sql_pending_queries_queue, queue, index*sizeof(struct db_cache *));
-  pqq_ptr = index;
+  sql_pqq_ptr = index;
 
   strlcpy(orig_insert_clause, insert_clause, LONGSRVBUFLEN);
   strlcpy(orig_update_clause, update_clause, LONGSRVBUFLEN);
@@ -477,9 +477,9 @@ void MY_cache_purge(struct db_cache *queue[], int inde
 
   start:
   memset(&idata->mv, 0, sizeof(struct multi_values));
-  memcpy(queue, sql_pending_queries_queue, pqq_ptr*sizeof(struct db_cache *));
-  memset(sql_pending_queries_queue, 0, pqq_ptr*sizeof(struct db_cache *));
-  index = pqq_ptr; pqq_ptr = 0;
+  memcpy(queue, sql_pending_queries_queue, sql_pqq_ptr*sizeof(struct db_cache *));
+  memset(sql_pending_queries_queue, 0, sql_pqq_ptr*sizeof(struct db_cache *));
+  index = sql_pqq_ptr; sql_pqq_ptr = 0;
 
   /* We check for variable substitution in SQL table */ 
   if (idata->dyn_table) {
@@ -526,9 +526,9 @@ void MY_cache_purge(struct db_cache *queue[], int inde
       pm_strftime_same(tmptable, LONGSRVBUFLEN, tmpbuf, &stamp, config.timestamps_utc);
 
       if (strncmp(idata->dyn_table_name, tmptable, SRVBUFLEN)) {
-	sql_pending_queries_queue[pqq_ptr] = queue[idata->current_queue_elem];
+	sql_pending_queries_queue[sql_pqq_ptr] = queue[idata->current_queue_elem];
 
-	pqq_ptr++;
+	sql_pqq_ptr++;
         go_to_pending = TRUE;
       }
     }
@@ -553,7 +553,7 @@ void MY_cache_purge(struct db_cache *queue[], int inde
   if (b.fail) Log(LOG_ALERT, "ALERT ( %s/%s ): recovery for MySQL daemon failed.\n", config.name, config.type);
 
   /* If we have pending queries then start again */
-  if (pqq_ptr) goto start;
+  if (sql_pqq_ptr) goto start;
   
   idata->elap_time = time(NULL)-start; 
   Log(LOG_INFO, "INFO ( %s/%s ): *** Purging cache - END (PID: %u, QN: %u/%u, ET: %lu) ***\n", 
