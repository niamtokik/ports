$OpenBSD: patch-src_modules_rlm_eap_libeap_eap_tls_c,v 1.1 2021/06/22 14:01:21 tb Exp $

Use SSL_get_session() instead of reaching into the SSL struct.

Index: src/modules/rlm_eap/libeap/eap_tls.c
--- src/modules/rlm_eap/libeap/eap_tls.c.orig
+++ src/modules/rlm_eap/libeap/eap_tls.c
@@ -129,7 +129,7 @@ int eaptls_success(EAP_HANDLER *handler, int peap_flag
 	    (((vp = pairfind(request->config_items, 1127)) != NULL) &&
 	     (vp->vp_integer == 0))) {
 		SSL_CTX_remove_session(tls_session->ctx,
-				       tls_session->ssl->session);
+				       SSL_get_session(tls_session->ssl));
 		tls_session->allow_session_resumption = 0;
 
 		/*
@@ -167,12 +167,12 @@ int eaptls_success(EAP_HANDLER *handler, int peap_flag
 		}
 
 		if (vps) {
-			SSL_SESSION_set_ex_data(tls_session->ssl->session,
+			SSL_SESSION_set_ex_data(SSL_get_session(tls_session->ssl),
 						eaptls_session_idx, vps);
 		} else {
 			RDEBUG2("WARNING: No information to cache: session caching will be disabled for this session.");
 			SSL_CTX_remove_session(tls_session->ctx,
-					       tls_session->ssl->session);
+					       SSL_get_session(tls_session->ssl));
 		}
 
 		/*
@@ -181,7 +181,7 @@ int eaptls_success(EAP_HANDLER *handler, int peap_flag
 		 */
 	} else {
 	       
-		vps = SSL_SESSION_get_ex_data(tls_session->ssl->session,
+		vps = SSL_SESSION_get_ex_data(SSL_get_session(tls_session->ssl),
 					     eaptls_session_idx);
 		if (!vps) {
 			RDEBUG("WARNING: No information in cached session!");
@@ -248,7 +248,7 @@ int eaptls_fail(EAP_HANDLER *handler, int peap_flag)
 	/*
 	 *	Force the session to NOT be cached.
 	 */
-	SSL_CTX_remove_session(tls_session->ctx, tls_session->ssl->session);
+	SSL_CTX_remove_session(tls_session->ctx, SSL_get_session(tls_session->ssl));
 
 	eaptls_compose(handler->eap_ds, &reply);
 
@@ -792,7 +792,7 @@ static eaptls_status_t eaptls_operation(eaptls_status_
 	 */
 	if (!tls_handshake_recv(handler->request, tls_session)) {
 		DEBUG2("TLS receive handshake failed during operation");
-		SSL_CTX_remove_session(tls_session->ctx, tls_session->ssl->session);
+		SSL_CTX_remove_session(tls_session->ctx, SSL_get_session(tls_session->ssl));
 		return EAPTLS_FAIL;
 	}
 
